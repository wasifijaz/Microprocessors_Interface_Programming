;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/13/2020 4:15:25 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29A1      	GOTO       417
_readswitches:
;Task1.c,18 :: 		char readswitches()
;Task1.c,20 :: 		rowa=0; rowb=1; rowc=1; rowd=1; // test row A
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1006      	BCF        RB0_bit, BitPos(RB0_bit+0)
0x0006	0x1486      	BSF        RB1_bit, BitPos(RB1_bit+0)
0x0007	0x1506      	BSF        RB2_bit, BitPos(RB2_bit+0)
0x0008	0x1586      	BSF        RB3_bit, BitPos(RB3_bit+0)
;Task1.c,21 :: 		if (c1==0)
0x0009	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x000A	0x281E      	GOTO       L_readswitches0
;Task1.c,23 :: 		delay_ms(1000);
0x000B	0x300D      	MOVLW      13
0x000C	0x00FB      	MOVWF      R11
0x000D	0x30AF      	MOVLW      175
0x000E	0x00FC      	MOVWF      R12
0x000F	0x30B6      	MOVLW      182
0x0010	0x00FD      	MOVWF      R13
L_readswitches1:
0x0011	0x0BFD      	DECFSZ     R13, 1
0x0012	0x2811      	GOTO       L_readswitches1
0x0013	0x0BFC      	DECFSZ     R12, 1
0x0014	0x2811      	GOTO       L_readswitches1
0x0015	0x0BFB      	DECFSZ     R11, 1
0x0016	0x2811      	GOTO       L_readswitches1
0x0017	0x0000      	NOP
;Task1.c,24 :: 		while(c1==0);
L_readswitches2:
0x0018	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x0019	0x281B      	GOTO       L_readswitches3
0x001A	0x2818      	GOTO       L_readswitches2
L_readswitches3:
;Task1.c,25 :: 		return '1';
0x001B	0x3031      	MOVLW      49
0x001C	0x00F0      	MOVWF      R0
0x001D	0x2913      	GOTO       L_end_readswitches
;Task1.c,26 :: 		}
L_readswitches0:
;Task1.c,27 :: 		if (c2==0)
0x001E	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x001F	0x2833      	GOTO       L_readswitches4
;Task1.c,29 :: 		delay_ms(1000);
0x0020	0x300D      	MOVLW      13
0x0021	0x00FB      	MOVWF      R11
0x0022	0x30AF      	MOVLW      175
0x0023	0x00FC      	MOVWF      R12
0x0024	0x30B6      	MOVLW      182
0x0025	0x00FD      	MOVWF      R13
L_readswitches5:
0x0026	0x0BFD      	DECFSZ     R13, 1
0x0027	0x2826      	GOTO       L_readswitches5
0x0028	0x0BFC      	DECFSZ     R12, 1
0x0029	0x2826      	GOTO       L_readswitches5
0x002A	0x0BFB      	DECFSZ     R11, 1
0x002B	0x2826      	GOTO       L_readswitches5
0x002C	0x0000      	NOP
;Task1.c,30 :: 		while(c2==0);
L_readswitches6:
0x002D	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x002E	0x2830      	GOTO       L_readswitches7
0x002F	0x282D      	GOTO       L_readswitches6
L_readswitches7:
;Task1.c,31 :: 		return '2';
0x0030	0x3032      	MOVLW      50
0x0031	0x00F0      	MOVWF      R0
0x0032	0x2913      	GOTO       L_end_readswitches
;Task1.c,32 :: 		}
L_readswitches4:
;Task1.c,33 :: 		if (c3==0)
0x0033	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x0034	0x2848      	GOTO       L_readswitches8
;Task1.c,35 :: 		delay_ms(1000);
0x0035	0x300D      	MOVLW      13
0x0036	0x00FB      	MOVWF      R11
0x0037	0x30AF      	MOVLW      175
0x0038	0x00FC      	MOVWF      R12
0x0039	0x30B6      	MOVLW      182
0x003A	0x00FD      	MOVWF      R13
L_readswitches9:
0x003B	0x0BFD      	DECFSZ     R13, 1
0x003C	0x283B      	GOTO       L_readswitches9
0x003D	0x0BFC      	DECFSZ     R12, 1
0x003E	0x283B      	GOTO       L_readswitches9
0x003F	0x0BFB      	DECFSZ     R11, 1
0x0040	0x283B      	GOTO       L_readswitches9
0x0041	0x0000      	NOP
;Task1.c,36 :: 		while(c3==0);
L_readswitches10:
0x0042	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x0043	0x2845      	GOTO       L_readswitches11
0x0044	0x2842      	GOTO       L_readswitches10
L_readswitches11:
;Task1.c,37 :: 		return '3';
0x0045	0x3033      	MOVLW      51
0x0046	0x00F0      	MOVWF      R0
0x0047	0x2913      	GOTO       L_end_readswitches
;Task1.c,38 :: 		}
L_readswitches8:
;Task1.c,40 :: 		rowa=1; rowb=0; rowc=1; rowd=1; // test row B
0x0048	0x1406      	BSF        RB0_bit, BitPos(RB0_bit+0)
0x0049	0x1086      	BCF        RB1_bit, BitPos(RB1_bit+0)
0x004A	0x1506      	BSF        RB2_bit, BitPos(RB2_bit+0)
0x004B	0x1586      	BSF        RB3_bit, BitPos(RB3_bit+0)
;Task1.c,41 :: 		if (c1==0)
0x004C	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x004D	0x2861      	GOTO       L_readswitches12
;Task1.c,43 :: 		delay_ms(1000);
0x004E	0x300D      	MOVLW      13
0x004F	0x00FB      	MOVWF      R11
0x0050	0x30AF      	MOVLW      175
0x0051	0x00FC      	MOVWF      R12
0x0052	0x30B6      	MOVLW      182
0x0053	0x00FD      	MOVWF      R13
L_readswitches13:
0x0054	0x0BFD      	DECFSZ     R13, 1
0x0055	0x2854      	GOTO       L_readswitches13
0x0056	0x0BFC      	DECFSZ     R12, 1
0x0057	0x2854      	GOTO       L_readswitches13
0x0058	0x0BFB      	DECFSZ     R11, 1
0x0059	0x2854      	GOTO       L_readswitches13
0x005A	0x0000      	NOP
;Task1.c,44 :: 		while(c1==0);
L_readswitches14:
0x005B	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x005C	0x285E      	GOTO       L_readswitches15
0x005D	0x285B      	GOTO       L_readswitches14
L_readswitches15:
;Task1.c,45 :: 		return '4';
0x005E	0x3034      	MOVLW      52
0x005F	0x00F0      	MOVWF      R0
0x0060	0x2913      	GOTO       L_end_readswitches
;Task1.c,46 :: 		}
L_readswitches12:
;Task1.c,47 :: 		if (c2==0)
0x0061	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x0062	0x2876      	GOTO       L_readswitches16
;Task1.c,49 :: 		delay_ms(1000);
0x0063	0x300D      	MOVLW      13
0x0064	0x00FB      	MOVWF      R11
0x0065	0x30AF      	MOVLW      175
0x0066	0x00FC      	MOVWF      R12
0x0067	0x30B6      	MOVLW      182
0x0068	0x00FD      	MOVWF      R13
L_readswitches17:
0x0069	0x0BFD      	DECFSZ     R13, 1
0x006A	0x2869      	GOTO       L_readswitches17
0x006B	0x0BFC      	DECFSZ     R12, 1
0x006C	0x2869      	GOTO       L_readswitches17
0x006D	0x0BFB      	DECFSZ     R11, 1
0x006E	0x2869      	GOTO       L_readswitches17
0x006F	0x0000      	NOP
;Task1.c,50 :: 		while(c2==0);
L_readswitches18:
0x0070	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x0071	0x2873      	GOTO       L_readswitches19
0x0072	0x2870      	GOTO       L_readswitches18
L_readswitches19:
;Task1.c,51 :: 		return '5';
0x0073	0x3035      	MOVLW      53
0x0074	0x00F0      	MOVWF      R0
0x0075	0x2913      	GOTO       L_end_readswitches
;Task1.c,52 :: 		}
L_readswitches16:
;Task1.c,53 :: 		if (c3==0)
0x0076	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x0077	0x288B      	GOTO       L_readswitches20
;Task1.c,55 :: 		delay_ms(1000);
0x0078	0x300D      	MOVLW      13
0x0079	0x00FB      	MOVWF      R11
0x007A	0x30AF      	MOVLW      175
0x007B	0x00FC      	MOVWF      R12
0x007C	0x30B6      	MOVLW      182
0x007D	0x00FD      	MOVWF      R13
L_readswitches21:
0x007E	0x0BFD      	DECFSZ     R13, 1
0x007F	0x287E      	GOTO       L_readswitches21
0x0080	0x0BFC      	DECFSZ     R12, 1
0x0081	0x287E      	GOTO       L_readswitches21
0x0082	0x0BFB      	DECFSZ     R11, 1
0x0083	0x287E      	GOTO       L_readswitches21
0x0084	0x0000      	NOP
;Task1.c,56 :: 		while(c3==0);
L_readswitches22:
0x0085	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x0086	0x2888      	GOTO       L_readswitches23
0x0087	0x2885      	GOTO       L_readswitches22
L_readswitches23:
;Task1.c,57 :: 		return '6';
0x0088	0x3036      	MOVLW      54
0x0089	0x00F0      	MOVWF      R0
0x008A	0x2913      	GOTO       L_end_readswitches
;Task1.c,58 :: 		}
L_readswitches20:
;Task1.c,60 :: 		rowa=1; rowb=1; rowc=0; rowd=1; // test row C
0x008B	0x1406      	BSF        RB0_bit, BitPos(RB0_bit+0)
0x008C	0x1486      	BSF        RB1_bit, BitPos(RB1_bit+0)
0x008D	0x1106      	BCF        RB2_bit, BitPos(RB2_bit+0)
0x008E	0x1586      	BSF        RB3_bit, BitPos(RB3_bit+0)
;Task1.c,61 :: 		if (c1==0)
0x008F	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x0090	0x28A4      	GOTO       L_readswitches24
;Task1.c,63 :: 		delay_ms(1000);
0x0091	0x300D      	MOVLW      13
0x0092	0x00FB      	MOVWF      R11
0x0093	0x30AF      	MOVLW      175
0x0094	0x00FC      	MOVWF      R12
0x0095	0x30B6      	MOVLW      182
0x0096	0x00FD      	MOVWF      R13
L_readswitches25:
0x0097	0x0BFD      	DECFSZ     R13, 1
0x0098	0x2897      	GOTO       L_readswitches25
0x0099	0x0BFC      	DECFSZ     R12, 1
0x009A	0x2897      	GOTO       L_readswitches25
0x009B	0x0BFB      	DECFSZ     R11, 1
0x009C	0x2897      	GOTO       L_readswitches25
0x009D	0x0000      	NOP
;Task1.c,64 :: 		while(c1==0);
L_readswitches26:
0x009E	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x009F	0x28A1      	GOTO       L_readswitches27
0x00A0	0x289E      	GOTO       L_readswitches26
L_readswitches27:
;Task1.c,65 :: 		return '7';
0x00A1	0x3037      	MOVLW      55
0x00A2	0x00F0      	MOVWF      R0
0x00A3	0x2913      	GOTO       L_end_readswitches
;Task1.c,66 :: 		}
L_readswitches24:
;Task1.c,67 :: 		if (c2==0)
0x00A4	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x00A5	0x28B9      	GOTO       L_readswitches28
;Task1.c,69 :: 		delay_ms(1000);
0x00A6	0x300D      	MOVLW      13
0x00A7	0x00FB      	MOVWF      R11
0x00A8	0x30AF      	MOVLW      175
0x00A9	0x00FC      	MOVWF      R12
0x00AA	0x30B6      	MOVLW      182
0x00AB	0x00FD      	MOVWF      R13
L_readswitches29:
0x00AC	0x0BFD      	DECFSZ     R13, 1
0x00AD	0x28AC      	GOTO       L_readswitches29
0x00AE	0x0BFC      	DECFSZ     R12, 1
0x00AF	0x28AC      	GOTO       L_readswitches29
0x00B0	0x0BFB      	DECFSZ     R11, 1
0x00B1	0x28AC      	GOTO       L_readswitches29
0x00B2	0x0000      	NOP
;Task1.c,70 :: 		while(c2==0);
L_readswitches30:
0x00B3	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x00B4	0x28B6      	GOTO       L_readswitches31
0x00B5	0x28B3      	GOTO       L_readswitches30
L_readswitches31:
;Task1.c,71 :: 		return '8';
0x00B6	0x3038      	MOVLW      56
0x00B7	0x00F0      	MOVWF      R0
0x00B8	0x2913      	GOTO       L_end_readswitches
;Task1.c,72 :: 		}
L_readswitches28:
;Task1.c,73 :: 		if (c3==0)
0x00B9	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x00BA	0x28CE      	GOTO       L_readswitches32
;Task1.c,75 :: 		delay_ms(1000);
0x00BB	0x300D      	MOVLW      13
0x00BC	0x00FB      	MOVWF      R11
0x00BD	0x30AF      	MOVLW      175
0x00BE	0x00FC      	MOVWF      R12
0x00BF	0x30B6      	MOVLW      182
0x00C0	0x00FD      	MOVWF      R13
L_readswitches33:
0x00C1	0x0BFD      	DECFSZ     R13, 1
0x00C2	0x28C1      	GOTO       L_readswitches33
0x00C3	0x0BFC      	DECFSZ     R12, 1
0x00C4	0x28C1      	GOTO       L_readswitches33
0x00C5	0x0BFB      	DECFSZ     R11, 1
0x00C6	0x28C1      	GOTO       L_readswitches33
0x00C7	0x0000      	NOP
;Task1.c,76 :: 		while(c3==0);
L_readswitches34:
0x00C8	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x00C9	0x28CB      	GOTO       L_readswitches35
0x00CA	0x28C8      	GOTO       L_readswitches34
L_readswitches35:
;Task1.c,77 :: 		return '9';
0x00CB	0x3039      	MOVLW      57
0x00CC	0x00F0      	MOVWF      R0
0x00CD	0x2913      	GOTO       L_end_readswitches
;Task1.c,78 :: 		}
L_readswitches32:
;Task1.c,80 :: 		rowa=1; rowb=1; rowc=1; rowd=0; // test row D
0x00CE	0x1406      	BSF        RB0_bit, BitPos(RB0_bit+0)
0x00CF	0x1486      	BSF        RB1_bit, BitPos(RB1_bit+0)
0x00D0	0x1506      	BSF        RB2_bit, BitPos(RB2_bit+0)
0x00D1	0x1186      	BCF        RB3_bit, BitPos(RB3_bit+0)
;Task1.c,81 :: 		if (c1==0)
0x00D2	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x00D3	0x28E7      	GOTO       L_readswitches36
;Task1.c,83 :: 		delay_ms(1000);
0x00D4	0x300D      	MOVLW      13
0x00D5	0x00FB      	MOVWF      R11
0x00D6	0x30AF      	MOVLW      175
0x00D7	0x00FC      	MOVWF      R12
0x00D8	0x30B6      	MOVLW      182
0x00D9	0x00FD      	MOVWF      R13
L_readswitches37:
0x00DA	0x0BFD      	DECFSZ     R13, 1
0x00DB	0x28DA      	GOTO       L_readswitches37
0x00DC	0x0BFC      	DECFSZ     R12, 1
0x00DD	0x28DA      	GOTO       L_readswitches37
0x00DE	0x0BFB      	DECFSZ     R11, 1
0x00DF	0x28DA      	GOTO       L_readswitches37
0x00E0	0x0000      	NOP
;Task1.c,84 :: 		while(c1==0);
L_readswitches38:
0x00E1	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x00E2	0x28E4      	GOTO       L_readswitches39
0x00E3	0x28E1      	GOTO       L_readswitches38
L_readswitches39:
;Task1.c,85 :: 		return 'S';
0x00E4	0x3053      	MOVLW      83
0x00E5	0x00F0      	MOVWF      R0
0x00E6	0x2913      	GOTO       L_end_readswitches
;Task1.c,86 :: 		}
L_readswitches36:
;Task1.c,87 :: 		if (c2==0)
0x00E7	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x00E8	0x28FC      	GOTO       L_readswitches40
;Task1.c,89 :: 		delay_ms(1000);
0x00E9	0x300D      	MOVLW      13
0x00EA	0x00FB      	MOVWF      R11
0x00EB	0x30AF      	MOVLW      175
0x00EC	0x00FC      	MOVWF      R12
0x00ED	0x30B6      	MOVLW      182
0x00EE	0x00FD      	MOVWF      R13
L_readswitches41:
0x00EF	0x0BFD      	DECFSZ     R13, 1
0x00F0	0x28EF      	GOTO       L_readswitches41
0x00F1	0x0BFC      	DECFSZ     R12, 1
0x00F2	0x28EF      	GOTO       L_readswitches41
0x00F3	0x0BFB      	DECFSZ     R11, 1
0x00F4	0x28EF      	GOTO       L_readswitches41
0x00F5	0x0000      	NOP
;Task1.c,90 :: 		while(c2==0);
L_readswitches42:
0x00F6	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x00F7	0x28F9      	GOTO       L_readswitches43
0x00F8	0x28F6      	GOTO       L_readswitches42
L_readswitches43:
;Task1.c,91 :: 		return '0';
0x00F9	0x3030      	MOVLW      48
0x00FA	0x00F0      	MOVWF      R0
0x00FB	0x2913      	GOTO       L_end_readswitches
;Task1.c,92 :: 		}
L_readswitches40:
;Task1.c,93 :: 		if (c3==0)
0x00FC	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x00FD	0x2911      	GOTO       L_readswitches44
;Task1.c,95 :: 		delay_ms(1000);
0x00FE	0x300D      	MOVLW      13
0x00FF	0x00FB      	MOVWF      R11
0x0100	0x30AF      	MOVLW      175
0x0101	0x00FC      	MOVWF      R12
0x0102	0x30B6      	MOVLW      182
0x0103	0x00FD      	MOVWF      R13
L_readswitches45:
0x0104	0x0BFD      	DECFSZ     R13, 1
0x0105	0x2904      	GOTO       L_readswitches45
0x0106	0x0BFC      	DECFSZ     R12, 1
0x0107	0x2904      	GOTO       L_readswitches45
0x0108	0x0BFB      	DECFSZ     R11, 1
0x0109	0x2904      	GOTO       L_readswitches45
0x010A	0x0000      	NOP
;Task1.c,96 :: 		while(c3==0);
L_readswitches46:
0x010B	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x010C	0x290E      	GOTO       L_readswitches47
0x010D	0x290B      	GOTO       L_readswitches46
L_readswitches47:
;Task1.c,97 :: 		return 'H';
0x010E	0x3048      	MOVLW      72
0x010F	0x00F0      	MOVWF      R0
0x0110	0x2913      	GOTO       L_end_readswitches
;Task1.c,98 :: 		}
L_readswitches44:
;Task1.c,99 :: 		return 'n';
0x0111	0x306E      	MOVLW      110
0x0112	0x00F0      	MOVWF      R0
;Task1.c,100 :: 		}
L_end_readswitches:
0x0113	0x0008      	RETURN
; end of _readswitches
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0114	0x1283      	BCF        STATUS, 5
0x0115	0x1303      	BCF        STATUS, 6
0x0116	0x0823      	MOVF       ___DoICPAddr+1, 0
0x0117	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0118	0x0822      	MOVF       ___DoICPAddr, 0
0x0119	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x011A	0x0008      	RETURN
; end of _____DoICP
_keypadinit:
;Task1.c,11 :: 		void keypadinit()
;Task1.c,13 :: 		TRISB=0b11110000;
0x011B	0x30F0      	MOVLW      240
0x011C	0x1683      	BSF        STATUS, 5
0x011D	0x1303      	BCF        STATUS, 6
0x011E	0x0086      	MOVWF      TRISB
;Task1.c,14 :: 		PORTB=0x00000000;
0x011F	0x1283      	BCF        STATUS, 5
0x0120	0x0186      	CLRF       PORTB
;Task1.c,15 :: 		OPTION_REG =0x7F;
0x0121	0x307F      	MOVLW      127
0x0122	0x1683      	BSF        STATUS, 5
0x0123	0x0081      	MOVWF      OPTION_REG
;Task1.c,16 :: 		}
L_end_keypadinit:
0x0124	0x0008      	RETURN
; end of _keypadinit
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0125	0x2114      	CALL       _____DoICP
0x0126	0x118A      	BCF        PCLATH, 3
0x0127	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0128	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0129	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x012A	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x012B	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x012C	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x012D	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x012E	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x012F	0x2925      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0130	0x0008      	RETURN
; end of ___CC2DW
_keyreading:
;Task1.c,125 :: 		keyreading(char k)
;Task1.c,127 :: 		if(k=='0')
0x0131	0x1283      	BCF        STATUS, 5
0x0132	0x1303      	BCF        STATUS, 6
0x0133	0x0824      	MOVF       FARG_keyreading_k, 0
0x0134	0x3A30      	XORLW      48
0x0135	0x1D03      	BTFSS      STATUS, 2
0x0136	0x2939      	GOTO       L_keyreading52
;Task1.c,128 :: 		j=0x00;
0x0137	0x01A0      	CLRF       _j
0x0138	0x01A1      	CLRF       _j+1
L_keyreading52:
;Task1.c,129 :: 		if(k=='1')
0x0139	0x0824      	MOVF       FARG_keyreading_k, 0
0x013A	0x3A31      	XORLW      49
0x013B	0x1D03      	BTFSS      STATUS, 2
0x013C	0x2941      	GOTO       L_keyreading53
;Task1.c,130 :: 		j=0x01;
0x013D	0x3001      	MOVLW      1
0x013E	0x00A0      	MOVWF      _j
0x013F	0x3000      	MOVLW      0
0x0140	0x00A1      	MOVWF      _j+1
L_keyreading53:
;Task1.c,131 :: 		if(k=='2')
0x0141	0x0824      	MOVF       FARG_keyreading_k, 0
0x0142	0x3A32      	XORLW      50
0x0143	0x1D03      	BTFSS      STATUS, 2
0x0144	0x2949      	GOTO       L_keyreading54
;Task1.c,132 :: 		j=0x02;
0x0145	0x3002      	MOVLW      2
0x0146	0x00A0      	MOVWF      _j
0x0147	0x3000      	MOVLW      0
0x0148	0x00A1      	MOVWF      _j+1
L_keyreading54:
;Task1.c,133 :: 		if(k=='3')
0x0149	0x0824      	MOVF       FARG_keyreading_k, 0
0x014A	0x3A33      	XORLW      51
0x014B	0x1D03      	BTFSS      STATUS, 2
0x014C	0x2951      	GOTO       L_keyreading55
;Task1.c,134 :: 		j=0x03;
0x014D	0x3003      	MOVLW      3
0x014E	0x00A0      	MOVWF      _j
0x014F	0x3000      	MOVLW      0
0x0150	0x00A1      	MOVWF      _j+1
L_keyreading55:
;Task1.c,135 :: 		if(k=='4')
0x0151	0x0824      	MOVF       FARG_keyreading_k, 0
0x0152	0x3A34      	XORLW      52
0x0153	0x1D03      	BTFSS      STATUS, 2
0x0154	0x2959      	GOTO       L_keyreading56
;Task1.c,136 :: 		j=0x04;
0x0155	0x3004      	MOVLW      4
0x0156	0x00A0      	MOVWF      _j
0x0157	0x3000      	MOVLW      0
0x0158	0x00A1      	MOVWF      _j+1
L_keyreading56:
;Task1.c,137 :: 		if(k=='5')
0x0159	0x0824      	MOVF       FARG_keyreading_k, 0
0x015A	0x3A35      	XORLW      53
0x015B	0x1D03      	BTFSS      STATUS, 2
0x015C	0x2961      	GOTO       L_keyreading57
;Task1.c,138 :: 		j=0x05;
0x015D	0x3005      	MOVLW      5
0x015E	0x00A0      	MOVWF      _j
0x015F	0x3000      	MOVLW      0
0x0160	0x00A1      	MOVWF      _j+1
L_keyreading57:
;Task1.c,139 :: 		if(k=='6')
0x0161	0x0824      	MOVF       FARG_keyreading_k, 0
0x0162	0x3A36      	XORLW      54
0x0163	0x1D03      	BTFSS      STATUS, 2
0x0164	0x2969      	GOTO       L_keyreading58
;Task1.c,140 :: 		j=0x06;
0x0165	0x3006      	MOVLW      6
0x0166	0x00A0      	MOVWF      _j
0x0167	0x3000      	MOVLW      0
0x0168	0x00A1      	MOVWF      _j+1
L_keyreading58:
;Task1.c,141 :: 		if(k=='7')
0x0169	0x0824      	MOVF       FARG_keyreading_k, 0
0x016A	0x3A37      	XORLW      55
0x016B	0x1D03      	BTFSS      STATUS, 2
0x016C	0x2971      	GOTO       L_keyreading59
;Task1.c,142 :: 		j=0x07;
0x016D	0x3007      	MOVLW      7
0x016E	0x00A0      	MOVWF      _j
0x016F	0x3000      	MOVLW      0
0x0170	0x00A1      	MOVWF      _j+1
L_keyreading59:
;Task1.c,143 :: 		if(k=='8')
0x0171	0x0824      	MOVF       FARG_keyreading_k, 0
0x0172	0x3A38      	XORLW      56
0x0173	0x1D03      	BTFSS      STATUS, 2
0x0174	0x2979      	GOTO       L_keyreading60
;Task1.c,144 :: 		j=0x08;
0x0175	0x3008      	MOVLW      8
0x0176	0x00A0      	MOVWF      _j
0x0177	0x3000      	MOVLW      0
0x0178	0x00A1      	MOVWF      _j+1
L_keyreading60:
;Task1.c,145 :: 		if(k=='9')
0x0179	0x0824      	MOVF       FARG_keyreading_k, 0
0x017A	0x3A39      	XORLW      57
0x017B	0x1D03      	BTFSS      STATUS, 2
0x017C	0x2981      	GOTO       L_keyreading61
;Task1.c,146 :: 		j=0x09;
0x017D	0x3009      	MOVLW      9
0x017E	0x00A0      	MOVWF      _j
0x017F	0x3000      	MOVLW      0
0x0180	0x00A1      	MOVWF      _j+1
L_keyreading61:
;Task1.c,147 :: 		if(k=='S')
0x0181	0x0824      	MOVF       FARG_keyreading_k, 0
0x0182	0x3A53      	XORLW      83
0x0183	0x1D03      	BTFSS      STATUS, 2
0x0184	0x2989      	GOTO       L_keyreading62
;Task1.c,148 :: 		j=0x0A;
0x0185	0x300A      	MOVLW      10
0x0186	0x00A0      	MOVWF      _j
0x0187	0x3000      	MOVLW      0
0x0188	0x00A1      	MOVWF      _j+1
L_keyreading62:
;Task1.c,149 :: 		if(k=='H')
0x0189	0x0824      	MOVF       FARG_keyreading_k, 0
0x018A	0x3A48      	XORLW      72
0x018B	0x1D03      	BTFSS      STATUS, 2
0x018C	0x2991      	GOTO       L_keyreading63
;Task1.c,150 :: 		j=0x0B;
0x018D	0x300B      	MOVLW      11
0x018E	0x00A0      	MOVWF      _j
0x018F	0x3000      	MOVLW      0
0x0190	0x00A1      	MOVWF      _j+1
L_keyreading63:
;Task1.c,151 :: 		}
L_end_keyreading:
0x0191	0x0008      	RETURN
; end of _keyreading
_getkey:
;Task1.c,102 :: 		char getkey()
;Task1.c,104 :: 		char key='n';
0x0192	0x306E      	MOVLW      110
0x0193	0x1283      	BCF        STATUS, 5
0x0194	0x1303      	BCF        STATUS, 6
0x0195	0x00A4      	MOVWF      getkey_key_L0
;Task1.c,105 :: 		while (key=='n')
L_getkey48:
0x0196	0x0824      	MOVF       getkey_key_L0, 0
0x0197	0x3A6E      	XORLW      110
0x0198	0x1D03      	BTFSS      STATUS, 2
0x0199	0x299E      	GOTO       L_getkey49
;Task1.c,106 :: 		key=readswitches();
0x019A	0x2003      	CALL       _readswitches
0x019B	0x0870      	MOVF       R0, 0
0x019C	0x00A4      	MOVWF      getkey_key_L0
0x019D	0x2996      	GOTO       L_getkey48
L_getkey49:
;Task1.c,107 :: 		return key;
0x019E	0x0824      	MOVF       getkey_key_L0, 0
0x019F	0x00F0      	MOVWF      R0
;Task1.c,108 :: 		}
L_end_getkey:
0x01A0	0x0008      	RETURN
; end of _getkey
_main:
0x01A1	0x1283      	BCF        STATUS, 5
0x01A2	0x1303      	BCF        STATUS, 6
0x01A3	0x01A0      	CLRF       _j
0x01A4	0x01A1      	CLRF       33
;Task1.c,111 :: 		void main ()
;Task1.c,113 :: 		char key='n';
;Task1.c,114 :: 		TRISD=0x00;
0x01A5	0x1683      	BSF        STATUS, 5
0x01A6	0x0188      	CLRF       TRISD
;Task1.c,115 :: 		PORTD=0x00;
0x01A7	0x1283      	BCF        STATUS, 5
0x01A8	0x0188      	CLRF       PORTD
;Task1.c,116 :: 		keypadinit();
0x01A9	0x211B      	CALL       _keypadinit
;Task1.c,117 :: 		while(1)
L_main50:
;Task1.c,119 :: 		key= getkey();
0x01AA	0x2192      	CALL       _getkey
;Task1.c,120 :: 		keyreading(key);
0x01AB	0x0870      	MOVF       R0, 0
0x01AC	0x00A4      	MOVWF      FARG_keyreading_k
0x01AD	0x2131      	CALL       _keyreading
;Task1.c,121 :: 		PORTD=j;
0x01AE	0x0820      	MOVF       _j, 0
0x01AF	0x0088      	MOVWF      PORTD
;Task1.c,122 :: 		}
0x01B0	0x29AA      	GOTO       L_main50
;Task1.c,123 :: 		}
L_end_main:
0x01B1	0x29B1      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003     [273]    _readswitches
0x0114       [7]    _____DoICP
0x011B      [10]    _keypadinit
0x0125      [12]    ___CC2DW
0x0131      [97]    _keyreading
0x0192      [15]    _getkey
0x01A1      [17]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    rowa
0x0006       [0]    rowb
0x0006       [0]    c1
0x0006       [0]    rowd
0x0006       [0]    rowc
0x0006       [0]    RB2_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB6_bit
0x0006       [1]    PORTB
0x0006       [0]    RB5_bit
0x0006       [0]    c2
0x0006       [0]    RB1_bit
0x0006       [0]    RB4_bit
0x0006       [0]    c3
0x0006       [0]    RB0_bit
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020       [2]    _j
0x0022       [2]    ___DoICPAddr
0x0024       [1]    FARG_keyreading_k
0x0024       [1]    getkey_key_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0088       [1]    TRISD
